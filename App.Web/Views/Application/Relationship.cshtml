@model App.Web.Models.ApplicationViewModel
@{
    ViewBag.Title = "Relationship";
}

@using (Html.BeginForm("Relationship", "Application", FormMethod.Post, new { @class = "form-horizontal", role = "form", id = "frmApp" }))
{
    @Html.HiddenFor(i => Model.Id)
    @Html.HiddenFor(i => Model.ActiveMemberId)
    <div class="panel panel-default">
        <div class="panel-heading">
            <div class="row">

                <div class="col-md-8">
                    <h4>Aplication #@Model.Id : Household Relationships</h4>
                    <p>Please tell us how the members of your household are related to each other.</p>
                </div>

                @Html.Label("* Required Field", new { @class = "text-danger col-md-2 pull-right" })
            </div>
        </div>
        <div class="panel-body">
            <div>
                <ul class="nav nav-tabs" role="tablist">
                    @for (int index = 0; index < Model.HouseMembers.Count; index++)
                    {
                        @Html.HiddenFor(i => Model.HouseMembers[index].Id)
                        @Html.HiddenFor(i => Model.HouseMembers[index].IsHeadMember)
                        @Html.HiddenFor(i => Model.HouseMembers[index].FirstName)
                        @Html.HiddenFor(i => Model.HouseMembers[index].LastName)
                        @Html.HiddenFor(i => Model.HouseMembers[index].DateOfBirth)
                        @Html.HiddenFor(i => Model.HouseMembers[index].Gender)
                        <li role="presentation" class="@(Model.HouseMembers[index].Id==Model.ActiveMemberId?"active":"")">
                            <a href="#@Model.HouseMembers[index].Id" aria-controls="@Model.HouseMembers[index].FirstName" role="tab" data-toggle="tab" onclick="$(this).parents('form').attr('action','/Application/Relationship?id=@Model.HouseMembers[index].Id');$(this).parents('form').submit();return false;">
                                <img src="~/Content/Images/user.png" width="50" />
                                @Model.HouseMembers[index].FirstName @Model.HouseMembers[index].LastName
                            </a>
                        </li>
                    }
                </ul>
                <div class="tab-content">
                    @for (int index = 0; index < Model.HouseMembers.Count; index++)
                    {
                        <div role="tabpanel" class="tab-pane @(Model.HouseMembers[index].Id==Model.ActiveMemberId?"active":"") row" id="@Model.HouseMembers[index].Id">
                            @for (int relIndex = 0; relIndex < Model.HouseMembers[index].Relationships?.Count; relIndex++)
                            {
                            <div class="col-md-3">
                                @if (Model.HouseMembers[index].Id != Model.ActiveMemberId)
                                {
                                    @Html.HiddenFor(i => Model.HouseMembers[index].Relationships[relIndex].Relationship)
                                }
                                @Html.HiddenFor(i => Model.HouseMembers[index].Relationships[relIndex].Id)
                                @Html.HiddenFor(i => Model.HouseMembers[index].Relationships[relIndex].RelativeId)
                                @Html.HiddenFor(i => Model.HouseMembers[index].Relationships[relIndex].MemberId)
                                @Html.Label("* ", new { @class = "text-danger" })
                                @Html.Label("Relationship to " + Model.HouseMembers.Where(m => m.Id == Model.HouseMembers[index].Relationships[relIndex].RelativeId).First().FirstName, new { @class = "control-label" })
                                @Html.DropDownListFor(i => Model.HouseMembers[index].Relationships[relIndex].Relationship, new SelectList(new[] { new SelectListItem() { Text = "Father", Value = "Father" }, new SelectListItem() { Text = "Mother", Value = "Mother" }, new SelectListItem() { Text = "Daughter", Value = "Daughter" }, new SelectListItem() { Text = "Son", Value = "Son" } }, "Value", "Text", Model.HouseMembers[index].Relationships[relIndex].Relationship), "Select", new { @class = "form-control required relationship" })
                                @Html.ValidationMessageFor(m => Model.HouseMembers[index].Relationships[relIndex].Relationship, "", new { @class = "text-danger" })
                            </div>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
        <div class="panel-footer">
            <div class="row">
                <div class="col-md-10">
                    <input type="submit" value="Save & Exit" class="btn btn-primary control-label" />
                </div>
                <div class="col-md-2">
                    @Html.ActionLink(" Submit  ", "", "", null, new { @class = "btn btn-primary control-label  pull-right", onclick = "$(this).parents('form').attr('action','/Application/Submit');$(this).parents('form').submit();return false;" })
                    <span class="pull-right">&nbsp;&nbsp;</span>
                    @Html.ActionLink(" Back ", "Index", "Application", null, new { @class = "btn btn-primary control-label  pull-right" })
                </div>
            </div>
        </div>
    </div>
}

<script type="text/javascript">

    //function validateRelationship(element) {
    //    var arr = [];
    //    $( ".relationship" ).each(function() {
    //        arr.push($( this ).val());
    //    });
    //    if ((arr.filter(r => r == element.value)).length > 1) {
    //        alert(element.value + " has already selected");
    //        element.selectedIndex = "0";
    //        return false;
    //    }
    //}
    </script>

